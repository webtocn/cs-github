name: Website Cron
on:
  schedule:
    - cron: "30 */6 * * *"
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get Job URL using GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: get_job_url # 为这个步骤设置一个ID，以便后续步骤引用其输出
        run: |
          # 使用 gh run view 命令获取指定名称作业的URL
          JOB_URL=$(gh run view $GITHUB_RUN_ID --json jobs --jq '.jobs[] | select(.name == "${{ github.job }}") | .url')
          # 将获取到的URL设置为步骤的输出
          echo "url=$JOB_URL" >> $GITHUB_OUTPUT
      - name: 安装工具
        env:
          GITHUB_ACTION_JOB_URL: ${{ steps.get_job_url.outputs.url }}
          RSYNC_SSH_KEY: ${{ secrets.RSYNC_SSH_KEY }}
          HARBOR_URL: ${{ secrets.HARBOR_URL }}
          HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
          HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}
          CS_SERVER_URL: ${{ secrets.CS_SERVER_URL }}
          RSYNC_HOST: ${{ secrets.RSYNC_HOST }}
          RSYNC_USER: ${{ secrets.RSYNC_USER }}
          RSYNC_PORT: ${{ secrets.RSYNC_PORT }}
          KEYCLOAK_URL: ${{ secrets.KEYCLOAK_URL }}
          KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
          KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
          KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}
        run: |

          echo "${{ secrets.RSYNC_SSH_KEY }}" > github_id_rsa && chmod 400 github_id_rsa

          # if echo "${{ github.event.head_commit.message }}" | grep -q "TASK_INFO"; then
          #     echo "export ${{ github.event.head_commit.message }}"  >> envfile
          # fi

          echo ""
          echo "安装软件包"
          sudo apt-get update && sudo apt-get install -y ca-certificates openssh-client rsync  skopeo curl

          echo ""
          echo "安装 helm"
          which helm
          if [ $? -ne 0 ];then
            curl https://raw.githubusercontent.com/helm/helm/refs/heads/main/scripts/get-helm-3 | bash
          fi
          helm version

          echo "下载文件"
          /usr/bin/rsync  -av --ignore-existing -e "ssh -p $RSYNC_PORT -i github_id_rsa  -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" ${RSYNC_USER}@${RSYNC_HOST}:/data/downloads/cncfstack/cs-executor-linux-amd64 .
          chmod +x cs-executor-linux-amd64
          
      - name: Run a multi-line script
        env:
          GITHUB_ACTION_JOB_URL: ${{ steps.get_job_url.outputs.url }}
          RSYNC_SSH_KEY: ${{ secrets.RSYNC_SSH_KEY }}
          HARBOR_URL: ${{ secrets.HARBOR_URL }}
          HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
          HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}
          CS_SERVER_URL: ${{ secrets.CS_SERVER_URL }}
          RSYNC_HOST: ${{ secrets.RSYNC_HOST }}
          RSYNC_USER: ${{ secrets.RSYNC_USER }}
          RSYNC_PORT: ${{ secrets.RSYNC_PORT }}
          KEYCLOAK_URL: ${{ secrets.KEYCLOAK_URL }}
          KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
          KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
          KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}

          TASK_INFO: "file"
        run: |
          echo "The complete job URL is: $GITHUB_ACTION_JOB_URL"

          source envfile
          . envfile

          echo ""
          echo "检查文件"
          ls -lha
          file cs-executor-linux-amd64

          echo ""
          echo "执行"
          ./cs-executor-linux-amd64
